@use './variables' as *;


@mixin sr-only {
  border: 0 !important;
  clip: rect(1px, 1px, 1px, 1px) !important;
  -webkit-clip-path: inset(50%) !important;
  clip-path: inset(50%) !important;
  height: 1px !important;
  margin: -1px !important;
  overflow: hidden !important;
  padding: 0 !important;
  position: absolute !important;
  width: 1px !important;
  white-space: nowrap !important;
}

@mixin respond-to($breakpoint) {
  $raw-query: map-get($breakpoints, $breakpoint);

  @if $raw-query {
    $query: if(
      type-of($raw-query) == 'string',
      unquote($raw-query),
      inspect($raw-query)
    );

    @media #{$query} {
      @content;
    }
  } @else {
    @error 'No value found for `#{$breakpoint}`. ' + 'Please make sure it is defined in `$breakpoints` map.'
  }
};

@mixin theme($colors) {
  background-color: map-get($map: $colors, $key: background);
  color: map-get($map: $colors, $key: text);

  .switch {
    svg path {
      fill: map-get($map: $colors, $key: icon-color);;
    }
  };

  .instruction {
    color: map-get($map: $colors, $key: secondary-text)
  }

  .quiz__length {
    color: map-get($map: $colors, $key: secondary-text)
  }

  .subjects {
    .item {
      .subject{
        background-color: map-get($map: $colors, $key: card-bg);
        color: map-get($map: $colors, $key: text);
        box-shadow: 0 16px 40px map-get($map: $colors, $key: box-shadow-clr);
      }
    }
  }

  .choices {
    .choice {
      button {
        background-color: map-get($map: $colors, $key: card-bg);
        color: map-get($map: $colors, $key: text);
        box-shadow: 0 16px 40px map-get($map: $colors, $key: box-shadow-clr);
      }
    }
  }

  .score {
    background-color: map-get($map: $colors, $key: card-bg);
  }

  .score__info {
    color: map-get($map: $colors, $key: secondary-text)
  }

  .primary-btn {
    box-shadow: 0 16px 40px map-get($map: $colors, $key: box-shadow-clr);
  }
}

